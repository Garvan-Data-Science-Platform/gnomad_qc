############################################################################################################
# This Dockerfile has a few changes compared to the original Dockerfile
# (which was copied from tgg_methods repo to gnomad_qc/v3/annotations/Dockerfile_vrs084):
# 1) Uses install GCS connector from broad.io
# 2) Installs bgzip
# 3) Puts gnomad & gnomad_qc dependencies inside the docker image
# 4) Change the java repo to adoptium because adoptopenjdk is deprecated
# 5) Reorder the installation of packages to optimize caching
# 6) Update hail version to 0.2.122 from 0.2.113 for some bug fixes to run Hail Query-on-Batch
############################################################################################################
# Dockerfile for creating an image that can run the VRS Annotation Script inside of it
# includes libpqdev and pythondev, plus psycopg2, ga4gh.vrs[extras] , and seqrepo

FROM 'google/cloud-sdk:slim'

# Copy in SeqRepo from local file structure
# Put this big folder (~12G) in the first layers so that it doesn't get rebuilt every time
COPY /usr/local/share/seqrepo/2018-11-26/ /tmp/local-seqrepo

RUN apt-get -y update && apt-get install -y --no-install-recommends \
    apt-utils \
    docker-compose \
    g++ \
    gawk \
    less \
    libbz2-dev \
    libcurl4-openssl-dev \
    liblzma-dev \
    libncurses5-dev \
    man-db \
    pkg-config \
    python3-venv \
    software-properties-common \
    unzip \
    wget \
    apt-transport-https \
    zlib1g-dev \
    libpq-dev \
    python-dev\
    && \
	# clean up apt cache
    rm -rf /var/lib/apt/lists/*

# Install Java 8 for hail
RUN mkdir -p /etc/apt/keyrings
RUN wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc && echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list && apt-get update && apt install -y --no-install-recommends temurin-8-jdk

RUN mkdir tools
WORKDIR /tools

# Install vcftools
ENV VCFTOOLS_VERSION="0.1.16"
RUN wget https://github.com/vcftools/vcftools/releases/download/v${VCFTOOLS_VERSION}/vcftools-${VCFTOOLS_VERSION}.tar.gz \
    && tar xf vcftools-${VCFTOOLS_VERSION}.tar.gz \
    && rm vcftools-${VCFTOOLS_VERSION}.tar.gz \
	&& cd vcftools-${VCFTOOLS_VERSION} \
	&& ./configure \
	&& make \
	&& make install \
	&& make clean

# Install bgzip from htslib
ENV BGZIP_VERSION="1.17"
RUN wget https://github.com/samtools/htslib/releases/download/${BGZIP_VERSION}/htslib-${BGZIP_VERSION}.tar.bz2 \
    && tar -xjf htslib-${BGZIP_VERSION}.tar.bz2 \
    && rm htslib-${BGZIP_VERSION}.tar.bz2 \
    && cd htslib-${BGZIP_VERSION} \
    && ./configure \
    && make \
    && make install \
    && make clean \
    && export PATH=htslib-${BGZIP_VERSION}/bin:$PATH

# Install python packages
RUN apt-get update \
	&& apt-get dist-upgrade -y \
	&& apt-get install -y --no-install-recommends\
    libc6-dev \
    libffi-dev \
    libgdbm-dev \
    liblapack-dev \
    liblapack3 \
    libncursesw5-dev \
    libopenblas-base \
    libopenblas-dev \
    libsqlite3-dev \
    libssl-dev \
    openssl \
    python3-smbus \
    python3 python3-pip

# Upgrade pip to latest version
RUN python3 -m pip install --upgrade pip

# Install hail and other python libraries
# Including packages needed for VRS annotation functionality
# Also include version for ga4gh.vrs-python to be most recent and supporting their new variant schema
# Please update the constant VRS_VERSION in vrs_annotation_batch.py accordingly when GA4GH_VRS_VERSION is changed
ENV HAIL_VERSION="0.2.122"
ENV GA4GH_VRS_VERSION="0.8.4"
RUN python3 --version
RUN python3 -m pip install --ignore-installed PyYAML
RUN python3 -m pip install \
    wheel \
    pypandoc \
    hail==${HAIL_VERSION} \
    scipy \
    numpy \
    pandas \
    matplotlib \
    seaborn \
    ipython \
    pybedtools \
    dill \
    psycopg2 \
    ga4gh.vrs[extras]==${GA4GH_VRS_VERSION}  \
    seqrepo \
    click \
    git+https://github.com/broadinstitute/gnomad_methods.git@main \
    git+https://github.com/broadinstitute/gnomad_qc.git@main

# Install GCS Connector
RUN curl -sSL broad.io/install-gcs-connector > install-gcs-connector.py && \
    python3 install-gcs-connector.py --key-file-path /gsa-key/key.json

WORKDIR /home
